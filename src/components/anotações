// import axios from 'axios';
// import { useState, useEffect } from "react"
// import React from "react"


// function FormularioSite(props) {
//     let id = "615f99f1a71c21001702f5a6"
//     id = "615f9e28a71c21001702f5a7";
//     const [formulario, setFormulario] = useState({
//         // id:'',
//         name:'',
//         description:'',
//         pictureUrl:''

//     });

// //////////////////////////////////////////////////////

//     function handleChange(event) {
//         setFormulario({...formulario,
//             [event.target.name]: event.target.value
//         }) 

//         const image = formulario.pictureUrl
//         return <div><img src={formulario.pictureUrl} /></div>
//     }

// //const { id } = useParams();
// //const history = useHistory();


//         async function handleSubmit (event){
//             event.preventDefault()
//             try{
//             const response = await axios.post('https://ironrest.herokuapp.com/instahack/', formulario) //CREATE
//             console.log(response)
//             }catch(erro){console.log(erro)}            
//         }

// //////////////////////////////////////////////////////

//         const [posts, setPosts] = useState([]); //
//         async function getPosts (){
            
//             try{
//                 const getposts = await axios.get('https://ironrest.herokuapp.com/instahack') //READ
//                 setPosts(getposts.data)
//                 setPosts([...formulario.data])
//               console.log(getposts.data)
//             }catch(erro){console.log(erro)}
//     }
//         useEffect(() => {   
//             getPosts()
//         }, [])

//     console.log(posts)

// //////////////////////////////////////////////////////
// //Só é possível atualizar as informações na tela através do state
// //O useState é um hooks que ajuda na atualização do state, ele trás duas informações (state e o método que atualiza esse state em específico)
// //Outro detalhe é o valor inicial do state específico (permite que setamos um valor inicial ao state específico)

//     const [postById, setpostById] = useState([]); //Só 
//         console.log(postById)
//     async function getPostById (){
        
//         try{
            
//             const postsId = await axios.get('https://ironrest.herokuapp.com/instahack/615f9e28a71c21001702f5a7') //READ
//             console.log(postsId)
//             console.log(postsId.data)
//             setpostById({...postsId.data})
            
//         }catch(erro){console.log(erro)}
// }
//     useEffect(() => {   
//         getPostById()
//     }, [])

// console.log(postById)

// //////////////////////////////////////////////////////



//     const [updates, setUpdate] = useState([formulario]);
//     async function updatePosts(){       
//         try{
//         const updatePost = await axios.put('https://ironrest.herokuapp.com/instahack/615f9e28a71c21001702f5a7',formulario) //UPDATE
//         // setUpdate(updatePost.data)
//         console.log(updatePost)
//         }catch(erro){console.log(erro)}       
//     }
    
//     useEffect(() => {   
//         updatePosts()
//     }, [])
//     console.log('AQUI É O PUT', updates)


// //////////////////////////////////////////////////////

    

//     const [deleteElement, setDeleteElement] = useState([])
//     async function deletePost() {
//         try{
//             const deletPost = await axios.delete('https://ironrest.herokuapp.com/instahack/615f9e28a71c21001702f5a7') //DELETE
//             setDeleteElement(deletPost.data)
//                 console.log(deletPost)
//         }catch(erro){console.log(erro)}
                    
//     }
    
//     useEffect(() => {   
//         deletePost()
//     }, [])
//     console.log('AQUI É O DELETE', deleteElement)       
   

//         // updatePosts()

//     // function updatePosts() {

//     //     try{
//     //         const update = await axios.patch('https://ironrest.herokuapp.com/instahack/') //CREATE
//     //         setPosts(update.data)
//     //         console.log(update)
//     //         }catch(erro){console.log(erro)}            
//     //     }
//     // }
        
        
//         // Como pegar o array de posts e reinderizar na tela. ????
//        //Ver primeira aula mod2 (promisse/Async)
       

//     return(
//         <div>
//             <form onSubmit={handleSubmit} > 
//             {/* <label>id: <input type="{formulário._id}" name="ID" placeholder="ID" value={formulario.id} onChange={ handleChange }></input></label> */}
//                 <label>Name: <input type="text" name="name" placeholder="Contact Name" value={formulario.name} onChange={ handleChange }></input></label>
//                 <label>Description: <input type="text" name="description" placeholder="Description" value={formulario.description} onChange={ handleChange }></input></label>                
//                 <label>Specialty: <input type="text" name="specialty" placeholder="Specialty" value={formulario.specialty} onChange={ handleChange }></input></label>                
//                 <label>Picture: <input type="URL" name="pictureUrl" placeholder="Picture URL" value={formulario.pictureUrl} onChange={ handleChange }></input></label>
//                 <div className="button">
//                 <button type="submit">Submit</button>
//                 </div>
//             </form>   

//             {/* Posso colocar o map aqui  dentro de chaves (sempre escrever JS dentro de chaves {}*/}

//                {posts.map((element) => {
//                    return (
//                     <div key={element._id}>
//                         <p>{element._id}</p>
//                         <p>{element.name}</p>
//                         <p>{element.description}</p>
//                         <p>{element.specialty}</p>
//                         <p>{element.pictureUrl}</p>
//                     </div>  
//                    )
//                })                 
//             }
//         </div>
//     );
// }




// export default FormularioSite


// //Criar um arquivo para cada componente (reinderizar o PUT)
// // recortar o post.map e testar sozinho. (feito)
// //Fazer o CRUD completo (criar=>OK ler=>OK falta fazer =>>> atualizar=>PUT e deletar=>DELETE)
// //Criar um novo botão verificar posts, esse botão aciona a nossa função getposts e reinderizar ela logo abaixo.
// //GET puxar os dados da API e Map para reinderizar.
// //Ver aula do dia 21/09/2021 CRUD => pegar o código.
// //Lógica do update > pegar o get, reinderizar dentro do formulário =>(state inicial) 
// //é a mesma lógica do post de imput controlado e na hora de enviar para a API enviar com o verbo PUT.*//
// //o id virá entre {} porque é uma variável. Preciso passar o valor que contém na ID, precisamos concatenar entre chaves.
// //

// //POST e PUT precisam do segundo argumento.
// //Delete e GET não precisam do segundo argumento (ambos apenas buscam a informação) Sempre passar uma rota concatenada de acordo com o ID que deseja acessar..

// //Existem dois tipos de GET um pega tudo o que tem no database, e o outro buscamos algo específico usando o ID.








//////////////////////////////////////////////////////////////////////////////
//código do componente GetPosts.js
// import axios from "axios";
// import React from "react";
// import {useState, useEffect} from 'react';
// import { Link } from 'react-router-dom';



// function GetPosts(){
//     <h1>TESTE</h1>
//     const [posts, setPosts] = useState([]); //
//         async function getPosts (){
            
//             try{
//                 const getposts = await axios.get('https://ironrest.herokuapp.com/instahack') //READ
//                 setPosts(getposts.data)
//                 console.log(getposts.data)
//             }catch(erro){console.log(erro)}
//     }
//         useEffect(() => {   
//             getPosts()
//         }, [])
 
//     console.log(posts)
//     return(
//         <div className="row">       
//             {/* <Link to="/create-posts">+</Link> */}
//         {posts.map((element) => {
//                 return (           

//                     <div className="col-4">
//                     <div key={element._id} className="card" style={{width: "25rem", fontColor: "red"}}>
//                             <img src={element.pictureUrl} className="card-img-top img-fluid" style={{maxWidth:"450px"}}/>
//                             <div className="card-body" style={{height:"230px", width:"280px"}} >
//                                 <h3 className="card-title">{element.name}</h3>
//                                 <p className="card-text">{element.description}</p>
//                                 <p className="card-text">{element.specialty}</p>
                                
                               
                                
//                                 <div className="button-card">
//                                 <Link to={`/create-posts/${element._id}`} className="btn btn-primary">Criar</Link>
//                                 <Link to={`/update-posts/${element._id}`} className="btn btn-primary">Atualizar</Link>
//                                 <Link to={`/delete-posts/${element._id}`} className="btn btn-danger">Deletar</Link>
//                                 </div>



//                             </div>
//                             {/* <h1>TESTESSSSSSS</h1> */}
//                         </div>



//                     </div>
                                                                 
                      
                    
                   
//             )
//         })                 
//     }        
//         </div>
// );
// }


// export default GetPosts;


//////////////////////////////////////////////////////////////////////////////
//código do componente CreatePosts.js

// import axios from 'axios';
// import React from 'react';
// import {useState, useEffect} from 'react';
// import { Link } from 'react-router-dom';

// function CreatePosts(props) {
    
//     const [formulario, setFormulario] = useState({
//         // id:'',
//         name:'',
//         specialty: '',
//         description:'',
//         pictureUrl:''

//     });

//     function handleChange(event) {
//         setFormulario({...formulario,
//             [event.target.name]: event.target.value
//         }) 

    
//     }

// //const history = useHistory();


//         async function handleSubmit (event){
//             event.preventDefault()
//             try{
//             const response = await axios.post('https://ironrest.herokuapp.com/instahack/', formulario) //CREATE
//             console.log(response)
//             props.history.push("/")
//             }catch(erro){console.log(erro)}            
//         }

//     return(
//         <div className="container-criar">
//             <form onSubmit={handleSubmit} > 
//                 <label>Name: <input type="text" name="name" placeholder="Contact Name" value={formulario.name} onChange={ handleChange }></input></label>
//                 <label>Description: <input type="text" name="description" placeholder="Description" value={formulario.description} onChange={ handleChange }></input></label>                
//                 <label>Specialty: <input type="text" name="specialty" placeholder="Specialty" value={formulario.specialty} onChange={ handleChange }></input></label>                
//                 <label>Picture: <input type="URL" name="pictureUrl" placeholder="Picture URL" value={formulario.pictureUrl} onChange={ handleChange }></input></label>
//                 <div className="button-create">
//                     <button type="submit" className="btn btn-success">Criar Post</button>
//                     <Link className="btn btn-danger" to="/">Voltar</Link>
//                 </div>
//             </form>  
//         </div>
//     );
// }


// export default CreatePosts;












//////////////////////////////////////////////////////////////////////////////
//código do componente updatePosts.js

// import axios from 'axios';
// import React from 'react';
// import { useState, useEffect} from 'react';
// import { useParams, Link } from 'react-router-dom'; //trás o ID. É um hooks também, acessa os parametros de rota e pega os dados do parametro de rotas. a palavra que usamos depois dos dois pontos pode ser qualquer uma.


// function UpdatePosts(props){
//     <h1>TESTE</h1>
//     const {dinossauro} =  useParams()
//     console.log( `teste ${useParams()}` )
//     console.log(`TESTE ${dinossauro}`)
//     const [postById, setpostById] = useState({
//         name:'',
//         specialty: '',
//         description:'',
//         pictureUrl:''
//     });
//     console.log(postById)
//     async function getPostById (){

//     try{
        
//         const postsId = await axios.get(`https://ironrest.herokuapp.com/instahack/${dinossauro}`);
//         console.log(postsId)
//         console.log(postsId.data)
//         setpostById({...postsId.data})
        
//     }catch(erro){console.log(erro)}
//     }
//     useEffect(() => {   
//     getPostById()
//     }, [])

//     console.log(postById)


//     //////////////////////////////////////////////////////

//     function handleChange(event) {
//         setpostById({...postById,
//             [event.target.name]: event.target.value
//         }) 
//     }

//     async function handleSubmit (event){
//         event.preventDefault()
//         delete postById._id 
//         try{
//             const updatePost = await axios.put(`https://ironrest.herokuapp.com/instahack/${dinossauro}`,postById) //UPDATE
//             // setUpdate(updatePost.data)
//             console.log(updatePost)
//             props.history.push("/")
//             }catch(erro){console.log(erro)}          
//     }

//         return(
//             <div>                         
//                 <div key={postById._id}>
//                     <form onSubmit={handleSubmit} >             
//                         <label>Name: <input type="text" name="name" placeholder="Contact Name" value={postById.name} onChange={ handleChange }></input></label>
//                         <label>Description: <input type="text" name="description" placeholder="Description" value={postById.description} onChange={ handleChange }></input></label>                
//                         <label>Specialty: <input type="text" name="specialty" placeholder="Specialty" value={postById.specialty} onChange={ handleChange }></input></label>                
//                         <label>Picture: <input type="URL" name="pictureUrl" placeholder="Picture URL" value={postById.pictureUrl} onChange={ handleChange }></input></label>
//                         <div className="button">
//                         <button type="submit">Atualizar</button>
//                         <Link to="/">Voltar</Link>
//                         </div>
//                     </form>                                     
//                  </div>              
//             </div>
//     );


// }



// export default UpdatePosts;






//////////////////////////////////////////////////////////////////////////////
//código do componente delete.js
// import axios from 'axios';
// import React from 'react';
// import { useState} from 'react';
// import { useParams, Link } from 'react-router-dom';
// import Modal from 'react-bootstrap/Modal';
// import Button from 'react-bootstrap/Button'


// function Delete(props){
//     const [show, setShow] =useState(true)
//     const {dinossauro} =  useParams()
//         async function handleDelete() {
//         try{
//             const deletPost = await axios.delete(`https://ironrest.herokuapp.com/instahack/${dinossauro}`) //DELETE
//                 console.log(deletPost)
//                 props.history.push("/")
//         }catch(erro){console.log(erro)}
                    
//     }

//     function handleClose() {
//         setShow(false)
//         props.history.push("/")

//     }
    
//       return(
//         <div>                                  
//            <Modal show={show} onHide={handleClose}>
//                 <Modal.Header closeButton >
//                 <Modal.Title> <strong>Excluir Post</strong></Modal.Title>
//                 </Modal.Header>
//                 <Modal.Body >
//                 Tem certeza que deseja excluir este post? Essa operação é irreversível.           
//                 </Modal.Body>
//                 <Modal.Footer>
//                 <Button style={{ backgroundColor: "#FFA900" }} onClick={handleDelete}>
//                     Excluir
//                 </Button>
//                 </Modal.Footer>
//             </Modal>            
//         </div>
//     )
// }


// export default Delete;






//////////////////////////////////////////////////////////////////////////////
//código do componente GetPosts.js




// import axios from "axios";
// import React from "react";
// import {useState, useEffect} from 'react';
// import { Link } from 'react-router-dom';



// function GetPosts(){
//     <h1>TESTE</h1>
//     const [posts, setPosts] = useState([]); //
//         async function getPosts (){
            
//             try{
//                 const getposts = await axios.get('https://ironrest.herokuapp.com/instahack') //READ
//                 setPosts(getposts.data)
//                 console.log(getposts.data)
//             }catch(erro){console.log(erro)}
//     }
//         useEffect(() => {   
//             getPosts()
//         }, [])
 
//     console.log(posts)
//     return(
//         <div className="row">       
//             {/* <Link to="/create-posts">+</Link> */}
//         {posts.map((element) => {
//                 return (           

//                     <div className="col-4">
//                     <div key={element._id} className="card" style={{width: "25rem", fontColor: "red"}}>
//                             <img src={element.pictureUrl} className="card-img-top img-fluid" style={{maxWidth:"450px"}}/>
//                             <div className="card-body" style={{height:"230px", width:"280px"}} >
//                                 <h3 className="card-title">{element.name}</h3>
//                                 <p className="card-text">{element.description}</p>
//                                 <p className="card-text">{element.specialty}</p>             
                                
//                                 <div className="button-card">
//                                 <Link to={`/create-posts/${element._id}`} className="btn btn-primary">Criar</Link>
//                                 <Link to={`/update-posts/${element._id}`} className="btn btn-primary">Atualizar</Link>
//                                 <Link to={`/delete-posts/${element._id}`} className="btn btn-danger">Deletar</Link>
//                                 </div>



//                             </div>
//                             {/* <h1>TESTESSSSSSS</h1> */}
//                         </div>



//                     </div>
                                                                 
                      
                    
                   
//             )
//         })                 
//     }        
//         </div>
// );
// }


// export default GetPosts;



//////////////////////////////////////////////////////////////////////////////
//código do HTML


// <!DOCTYPE html>
// <html lang="en">
//   <head>
//     <meta charset="utf-8" />
//     <link rel="icon" href="%PUBLIC_URL%/favicon.ico" />
//     <meta name="viewport" content="width=device-width, initial-scale=1" />
//     <meta name="theme-color" content="#000000" />
//     <meta name="description" content="Web site created using create-react-app"/>
//     <link
//       rel="stylesheet"
//       href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css"
//       integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO"
//       crossorigin="anonymous"
//     />

//     <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
//     <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.6.0/font/bootstrap-icons.css">
//     <link rel="stylesheet" href="../src/App.css">
    
//     <title src="../src/images/brand.png">InstaHack</title>
//   </head>
//   <STYLE>{text-decoration: none;}</STYLE>
//   <body>
//     <header>
//       <nav class="navbar navbar-light nav-top">
//         <div class="container-fluid nav-container">
//           <a class="navbar-brand" href="https://www.instagram.com/" target="_blank">
//               <img src="https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png" 
//               ><img>
//           </a>          
//               <form class="d-flex">
//                 <input class="form-control me-2" type="search" placeholder="Pesquisar" aria-label="Search"></input>
//               </form>          
         
//           <a href="/">         
//               <div class="icons-nav" style="width:20%">
//                 <i class="bi bi-house-door icons"></i>
//                 <i class="bi bi-inbox icons"></i>
//                 <i class="bi bi-compass icons"></i>
//                 <i class="bi bi-heart icons"></i>      
//                 <i class="bi bi-instagram icons"></i>           
//             </div>
//         </a> 
//         </div>
//       </nav>
//     </header>


//     <noscript>You need to enable JavaScript to run this app.</noscript>
//     <div id="root" style="300px"></div>

//      <!-- Option 1: Bootstrap Bundle with Popper -->
//      <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
//   </body>
// </html>




//////////////////////////////////////////////////////////////////////////////
//código do HTML



// *{
//     margin-top: -3px;
//     color:#282c34;
    
//     }
    
//     .App {
//     text-align: center;
//     display: flex;
//     justify-content: space-evenly;
//     }
    
//     .App-logo {
//     height: 40vmin;
//     pointer-events: none;
//     }
    
//     @media (prefers-reduced-motion: no-preference) {
//     .App-logo {
//     animation: App-logo-spin infinite 20s linear;
//     }
//     }
    
//     .App-header {
//     background-color: #282c34;
//     min-height: 100vh;
//     display: flex;
//     flex-direction: column;
//     align-items: center;
//     justify-content: center;
//     font-size: calc(10px + 2vmin);
//     color: white;
//     }
    
//     .App-link {
//     color: #61dafb;
//     }
    
//     @keyframes App-logo-spin {
//     from {
//     transform: rotate(0deg);
//     }
//     to {
//     transform: rotate(360deg);
//     }
//     }
    
    /* 
    button {
    color: black;
    } */
    
    
    // .nav-top{
    // height: 63px;
    // background-color: white !important;
    // border-top: 0.5px solid #dbdbdb;
    // border-bottom: 1px solid #dbdbdb;
    // text-decoration: none;
    // }
    
    
    
    
    
    // .nav-container{
    // padding-left: 25% !important;
    // padding-right: 25% !important;
    // padding: auto;
    // margin-left: auto;
    // text-decoration: none;
    // box-sizing: 50px;
    // margin-top: 0;
    // }
    
    
    // .form-control{
    // border-radius: .15rem !important;
    // padding: 0% !important;
    // background-color: #fafafa !important;
    // text-align: center;
    // font-size: 15px !important;
    // margin-top: 1px;
    // }
    
    /* .img-nav{
    border-radius: 100%;
    -o-border-image: 20%;
    -webkit-border-image: 100%;
    -moz-border-image: 100%;
    max-width: 30px;
    max-height: 25px;
    text-decoration: none;
    margin-top: 1px;
    } */
    
    // .icons {
    // padding: 30%;
    // font-size: 30px;
    // }
    
    
    // .icons-nav{
    // display: flex;
    // justify-content: center;
    // align-items: flex-start;
    // text-decoration: none;
    // color: #282c34;
    // }
    
    // .home-container{
    // text-decoration: none;
    // color: black
    // }
    
    
    /* div{
    display:initial;
    justify-content: space-between;
    align-items: center;
    box-sizing: unset;
    border-radius: 1px;
    margin-top: 20px;  
    } */
    
    
    /* 
    .container-fluid{
    margin: auto;
    padding: auto;
    border-top: 20px;
    border: 50px;
    } */
    
    /* .container-nav{
    background-color: #282c34;
    }
    */
    
    
      /* .card{
        float:inline-start;
        width:240px;
        background:#bfb;
        display: flex;
        justify-content: space-evenly;
        align-items: center;
        padding: 1%;
        margin-top: 1%;
        flex-direction: row | row-reverse | column | column-reverse; 
        flex-wrap: nowrap | wrap | wrap-reverse;
      } */
    
     
    
    //  .card{
    //   padding: 1%;
    //   margin: 3%;
    //   list-style: none;
    //   border:1px solid silver;
    //   -ms-box-orient: horizontal;
    //   display: -moz-box;
    //   display: -ms-flexbox;
    //   display: -moz-flex;
    //   display: -webkit-flex;
    //   display: flex;
    //   justify-content: space-around;
    //   align-items: stretch;
    //   -webkit-flex-wrap: nowrap;
    //   flex-wrap: nowrap;
      
    // } 
     
    
    
    
    
    
    
    // .button-card{
    //   display: flex;
    //   justify-content: space-between;
    //   margin-top: 10px;
    // }
    
    
    // .root{
    //   height: 350px;
    // }
    
    
    
    // .btn-danger{
    //   background-color: red;
    //   border-color: red;
    // }
    
    // .btn-primary{
    //   background-color:rgb(red, green, blue) ;
    // }
    
    
    
    
    // .card-image-top{
    //   max-height: 300px;
    // }
    
    /* .button-create{
      display: flex;
      align-items: center;
      padding: auto;
      padding-left: 300px;
      
    } */
    
    
    /* .btn-success{
      display: flex;
      margin-left: 10p;
      margin-top: 5px;
    }
    
     */
    
    
    
    // .container-criar{
    //   display: flex;
    //   justify-content: space-around;
    //   padding: 1%;
    //   margin: 3%;
    //   list-style: none;
    //   border:1px solid silver;
    //   -ms-box-orient: horizontal;
    //   display: -moz-box;
    //   display: -ms-flexbox;
    //   display: -moz-flex;
    //   display: -webkit-flex;
    //   display: flex;
    //   justify-content: space-between;
    //   align-items: stretch;
    //   -webkit-flex-wrap: nowrap;
    //   flex-wrap: nowrap;
    //   flex-direction: column;
    // }
    
    
    
    
    // .botão-danger{
    //   margin-left: 30px;
    // }
    
    
    
    
    /* 
    .campo-form-criar{
      width: 50px;
      
    } */
    
    
    /* .campo-form-criar{
      width: 200px;
      display: flex;
      justify-content: space-between;
      flex-direction:initial;
    
    } */
    
    
    
    
    // .campo-form-criar{
    //   padding: 1%;
    //   margin: 3%;
    //   list-style: none;
    //   border:1px solid silver;
    //   border-radius: 20px;
    //   -ms-box-orient: horizontal;
    //   display: -moz-box;
    //   display: -ms-flexbox;
    //   display: -moz-flex;
    //   display: -webkit-flex;
    //   display: flex;
    //   justify-content: space-around;
    //   align-items: stretch;
    //   -webkit-flex-wrap: nowrap;
    //   flex-wrap: nowrap;
    //   text-align: center;
    
    // }
    
    
    // .campo-form-atualizar{
    //   padding: 1%;
    //   margin: 3%;
    //   list-style: none;
    //   border:1px solid silver;
    //   border-radius: 20px;
    //   -ms-box-orient: horizontal;
    //   display: -moz-box;
    //   display: -ms-flexbox;
    //   display: -moz-flex;
    //   display: -webkit-flex;
    //   display: flex;
    //   justify-content: space-around;
    //   align-items: stretch;
    //   -webkit-flex-wrap: nowrap;
    //   flex-wrap: nowrap;
    //   text-align: center;
    // }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
















